service: trends-collector
frameworkVersion: "3"

plugins:
  - ./serverless_plugins/packing_go.js

custom:
  go:
    cmd: GOARCH=amd64 GOOS=linux go build -ldflags="-s -w"
    supportedRuntimes: ["provided.al2"]
    buildProvidedRuntimeAsBootstrap: true
    ignoreFunctions:
      - crawler

provider:
  name: aws
  runtime: provided.al2
  stage: dev
  region: ap-northeast-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:BatchWriteItem
      Resource: "*"

  ecr:
    images:
      crawlerContainerImage:
        path: .
        platform: linux/amd64
        file: ./crawler/Dockerfile

package:
  individually: true
  exclude:
    - "./**"
  include:
    - "./functions/**"

functions:
  summary-push:
    handler: functions/summary-push/main.go
    environment:
      SLACK_BOT_TOKEN: ${ssm:/trends-collector/push/SLACK_BOT_TOKEN}
      SLACK_CHANNEL: ${ssm:/trends-collector/push/SLACK_CHANNEL}
      WEB_PAGE_SUMMARY_API_URL: ${ssm:/web-page-summarizer/prod/API_URL}
      WEB_PAGE_SUMMARY_API_KEY: ${ssm:/web-page-summarizer/prod/API_KEY}
    timeout: 240
    # events:
    #   - eventBridge:
    #       schedule: "cron(0 9 * * ? *)"

  health:
    handler: functions/health/main.go
    events:
      - http:
          path: /health
          method: get
          cors: true
          # private: true

  topic:
    handler: functions/topic/main.go
    events:
      - http:
          path: /topic
          method: get
          cors: true
          # private: true
      - http:
          path: /topic/{id}
          method: get
          cors: true
          # private: true
      - http:
          path: /topic
          method: post
          cors: true
          # private: true
      - http:
          path: /topic
          method: delete
          cors: true
          # private: true
      - http:
          path: /topic
          method: put
          cors: true
          # private: true

  crawler:
    image:
      name: crawlerContainerImage
    timeout: 300
    memorySize: 2048
    ephemeralStorageSize: 1024
    # events:
    #   - eventBridge:
    #       schedule: "cron(0 * * * ? *)"

resources:
  Resources:
    topicsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: topics
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    pagesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: pages
        AttributeDefinitions:
          - AttributeName: partition_key
            AttributeType: S
          - AttributeName: trend_rank
            AttributeType: N
        KeySchema:
          - AttributeName: partition_key
            KeyType: HASH
          - AttributeName: trend_rank
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    summaryTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: summaries
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    sequenceTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: sequence
        AttributeDefinitions:
          - AttributeName: tablename
            AttributeType: S
        KeySchema:
          - AttributeName: tablename
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
